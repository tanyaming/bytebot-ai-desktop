name: bytebot

services:
  bytebot-desktop:
    # Build from source
    build:
      context: ../packages/
      dockerfile: bytebotd/Dockerfile
    # Use pre-built image
    image: ghcr.io/bytebot-ai/bytebot-desktop:edge
    shm_size: "2g"
    container_name: bytebot-desktop
    restart: unless-stopped
    hostname: computer
    privileged: true
    ports:
      - "9990:9990" # bytebotd service & noVNC
    environment:
      - DISPLAY=:0
    networks:
      - bytebot-network

  # 使用外部MySQL数据库，不再需要本地PostgreSQL容器
  # MySQL连接信息: mysql://mysqlroot:Htjc2025a@8.137.123.168:3306/testData?charset=utf8mb4

  bytebot-agent-cc:
    build:
      context: ../packages/
      dockerfile: bytebot-agent-cc/Dockerfile
    container_name: bytebot-agent-cc
    restart: unless-stopped
    ports:
      - "9991:9991"
    environment:
      - DATABASE_URL=${DATABASE_URL:-mysql://mysqlroot:Htjc2025a@8.137.123.168:3306/testData?charset=utf8mb4}
      - BYTEBOT_DESKTOP_BASE_URL=${BYTEBOT_DESKTOP_BASE_URL:-http://bytebot-desktop:9990}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    # 不再依赖本地PostgreSQL，使用外部MySQL
    networks:
      - bytebot-network

  bytebot-ui:
    build:
      context: ../packages/
      dockerfile: bytebot-ui/Dockerfile
      args:
        - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent-cc:9991}
        - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    # Use pre-built image
    image: ghcr.io/bytebot-ai/bytebot-ui:edge
    container_name: bytebot-ui
    restart: unless-stopped
    ports:
      - "9992:9992"
    environment:
      - NODE_ENV=production
      - BYTEBOT_AGENT_BASE_URL=${BYTEBOT_AGENT_BASE_URL:-http://bytebot-agent-cc:9991}
      - BYTEBOT_DESKTOP_VNC_URL=${BYTEBOT_DESKTOP_VNC_URL:-http://bytebot-desktop:9990/websockify}
    depends_on:
      - bytebot-agent-cc
    networks:
      - bytebot-network

networks:
  bytebot-network:
    driver: bridge

# 不再需要PostgreSQL数据卷
# volumes:
#   postgres_data:
